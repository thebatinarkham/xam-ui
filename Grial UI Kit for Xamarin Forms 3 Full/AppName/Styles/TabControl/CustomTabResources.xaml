<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:grial="clr-namespace:AppName.Core;assembly=AppName.Core" xmlns:local="clr-namespace:AppName"
	x:Class="AppName.CustomTabResources">
    <ControlTemplate
		x:Key="TabItemTemplate">
        <Grid
			HorizontalOptions="Center">
            <StackLayout
				Margin="0,2"
				Orientation="Horizontal"
				Spacing="0">
                
                <!-- IMAGE ICONS -->
                <Image
					IsVisible="{ TemplateBinding CurrentIconImage, Converter={StaticResource IsNotNullConverter} }"
					Source="{ TemplateBinding CurrentIconImage }"
					VerticalOptions="Center"
					WidthRequest="44"
					HeightRequest="44">
                    <Image.Triggers>
                        <DataTrigger
							TargetType="Image"
							Binding="{ TemplateBinding IsSelected }"
							Value="false">
                            <Setter
								Property="Opacity"
								Value="0.7" />
                        </DataTrigger>
                    </Image.Triggers>
                </Image>
                
                <!-- FONT ICONS -->
                <Label
					VerticalOptions="Center"
					Text="{ TemplateBinding CurrentIconText }"
					TextColor="{ TemplateBinding CurrentIconTextColor }"
					FontSize="{ TemplateBinding IconTextFontSize }"
					FontFamily="{ TemplateBinding IconTextFontFamily }"
					IsVisible="{ TemplateBinding CurrentIconText, Converter={StaticResource IsNotEmptyStringConverter} }" />
                
                <!-- TEXT -->
                <Label
					Margin="4,0"
					VerticalOptions="Center"
					FontSize="{ TemplateBinding FontSize }"
					IsVisible="{ TemplateBinding Text, Converter={ StaticResource IsNotEmptyStringConverter} }"
					Text="{ TemplateBinding Text }"
					TextColor="{ TemplateBinding CurrentTextColor }" />
                    
            </StackLayout>
            
            <!-- BADGE -->
            <local:Badge
				Scale=".6"
				Text="{ TemplateBinding BadgeText }"
				BackgroundColor="{ TemplateBinding BadgeBackgroundColor }"
				TextColor="{ TemplateBinding BadgeTextColor }"
				HorizontalOptions="End"
				VerticalOptions="Start"
				TranslationX="10"
				TranslationY="-3" />
        </Grid>
    </ControlTemplate>

    <Style
		x:Key="TabItemStyle"
		TargetType="grial:TabItem">
        <Setter
			Property="FontSize"
			Value="12" />
        <Setter
			Property="TextColor"
			Value="#9B9B9B" />
        <Setter
			Property="TextColorSelected"
			Value="{ DynamicResource AccentColor }" />
        <Setter
			Property="IconTextFontFamily"
			Value="{ StaticResource IconsFontFamily }" />
        <Setter
			Property="IconTextFontSize"
			Value="28" />
        <Setter
			Property="IconTextColor"
			Value="#9B9B9B" />
        <Setter
			Property="IconTextColorSelected"
			Value="{ DynamicResource AccentColor }" />
        <Setter
			Property="BadgeTextColor"
			Value="White" />
        <Setter
			Property="BadgeBackgroundColor"
			Value="Red" />
    </Style>

    <Style
		x:Key="CustomTabStyle"
		TargetType="grial:TabControl">
        <Setter
			Property="TabItemStyle"
			Value="{ StaticResource TabItemStyle }" />
        <Setter
			Property="TabItemControlTemplate"
			Value="{ StaticResource TabItemTemplate }" />
        <Setter
			Property="TabStripBackgroundColor"
			Value="#F9F9F9" />
        <Setter
			Property="TabContentBackgroundColor"
			Value="Transparent" />
        <Setter
			Property="AnimateTransition"
			Value="false" />
        <Setter
			Property="TabStripPlacement"
			Value="Bottom" />

        <Setter
			Property="TabStripStyle">
            <Setter.Value>
                <Style
					TargetType="Grid">
                    <Setter
						Property="Padding"
						Value="10" />
                    <Setter
						Property="grial:Effects.ApplyIOSSafeAreaAsPadding"
						Value="Bottom" />
                    <Setter
						Property="grial:Effects.IOSSafeAreaBottomSize"
						Value="15" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>